(defpoll weather_label
    :interval '1h'
    'scripts/weather'
)
(defwidget weather []
    (button
        :onclick '/home/reese/scripts/kitty-popup floating 73 29 -c "wego -f nerd; read -n 1 -p \'\'; exit"'
        (label :class 'label'
            :text '${weather_label}'
        )
    )
)

(defpoll moon_label
    :interval '1h'
    'scripts/moon'
)
(defwidget moon []
    (button
        :onclick '/home/reese/scripts/kitty-popup floating 65 24 -c "pyphoon-lolcat | head -n 23; read -n 1 -p \'\'; exit"'
        (label :class 'label'
            :text '${moon_label}'
        )
    )
)

(defwidget cpu []
    (label :class 'label'
        :text 'CPU ${round(EWW_CPU.avg, 0)}%'
    )
)

(defwidget ram []
    (label :class 'label'
        :text 'RAM ${round(EWW_RAM.used_mem_perc, 0)}%'
    )
)

(defwidget temp [temp_avg]
    (label
        :class "label ${temp_avg < 80 ? 'normal' : temp_avg < 90 ? 'warning' : 'critical'}"
        :text  {temp_avg < 80 ? '﨎 ${temp_avg}°c' : ' ${temp_avg}°c'}
    )
)
(defwidget temperature []
    (temp :temp_avg '${round((EWW_TEMPS.CORE_0+EWW_TEMPS.CORE_1+EWW_TEMPS.CORE_2+EWW_TEMPS.CORE_3+EWW_TEMPS.CORE_4+EWW_TEMPS.CORE_5)/6, 0)}')
)

(defwidget net_down []
    (label :class 'label'
        :text ' ${round((EWW_NET.enp2s0.NET_DOWN+EWW_NET.wlp3s0.NET_DOWN+EWW_NET.enxa0cec8c306b2.NET_DOWN)*8/1024, 1)}k'
    )
)
(defwidget net_up []
    (label :class 'label'
        :text ' ${round((EWW_NET.enp2s0.NET_UP+EWW_NET.wlp3s0.NET_UP+EWW_NET.enxa0cec8c306b2.NET_UP)*8/1024, 1)}k'
    )
)

;(defwidget sysinfo []
;    (revealer
;        :transition 'slideright'
;        :duration 2
;
;    )
;)


(deflisten workspaces 'scripts/workspaces')
(defwidget i3 []
    (literal :content workspaces)
)


(deflisten tray_icons :initial '' 'killall eww-tray && eww-tray')
(defwidget tray []
    (literal :content "(box :class 'tray' :orientation 'h' :vexpand true :space-evenly true ${tray_icons})")
)

(defpoll kdec_label
    :interval '10s'
    'scripts/kdeconnect -d'
)
(defwidget kdeconnect []
    (literal :content kdec_label)
)

(defpoll vpn_status
    :interval '1s'
    'rofi-nordvpn -s'
)
(defwidget vpn []
    (button
        :onclick 'rofi-nordvpn'
        :class   {vpn_status == 'Off' ? 'warning' : 'good'}
        :tooltip {vpn_status == 'Off' ? 'Disconnected' : 'Connected to ${vpn_status}'}
        (label :class 'label'
            :text '嬨'
        )
    )
)

(defwidget pywal []
    (button
        :onclick 'wal.py'
        (label :class 'label'
            :text ''
        )
    )
)

(deflisten backup_label
    'scripts/backup-status'
)
(defwidget backup []
    (button
        :onclick '~/scripts/rofi/backupctl'
        (label :class 'label'
            :text '${backup_label}'
        )
    )
)

(defwidget update []
    (button
        :onclick 'update apt'
        (label :class 'label'
            :text ''
        )
    )
)

(defpoll WLAN_CLASS :interval "1m" "scripts/wifi --CLASS")
(defpoll WLAN_SSID :interval "1m" "scripts/wifi --SSID")
(defpoll WLAN_ICON :interval "1m" "scripts/wifi --ICON")
(defvar wifi_revealed false)
(defwidget wifi []
    (eventbox
        :onhover "eww update wifi_revealed=true"
        :onhoverlost "eww update wifi_revealed=false"
        (box
            :vexpand "false"
            :hexpand "false"
            :space-evenly "false"
            (button
                :class "${WLAN_CLASS}"
                :onclick "networkmanager_dmenu"
                :wrap "false"
                (label :class 'label'
                    :text '${WLAN_ICON}'
                )
            )
            (revealer
                :transition "slideright"
                :reveal wifi_revealed
                :duration "300ms"
                (label
                    :text WLAN_SSID
                    :orientation "h"
                )
            )
        )
    )
)

(defwidget battery_icon [bat]
    (box
        :class "${
            bat.status == 'Discharging' && bat.capacity <= 5
                ? 'warning'
                : (bat.status == 'Charging' && bat.capacity > 95) || bat.status == 'Full'
                    ? 'good'
                    : ''}"
        "${
            bat.status == 'Discharging'
                ? bat.capacity <= 5 ? ''
                : bat.capacity <= 15 ? ''
                : bat.capacity <= 25 ? ''
                : bat.capacity <= 35 ? ''
                : bat.capacity <= 45 ? ''
                : bat.capacity <= 55 ? ''
                : bat.capacity <= 65 ? ''
                : bat.capacity <= 75 ? ''
                : bat.capacity <= 85 ? ''
                : bat.capacity <= 95 ? ''
                : ''
            : bat.status == 'Charging'
                ? ''
                : ''}"
    )
)
(defwidget battery []
    (box :orientation 'h' :space-evenly false :spacing 6 :class 'label'
        (battery_icon :bat '${EWW_BATTERY.BAT0}')
        '${EWW_BATTERY.BAT0.capacity}%'
    )
)

(defpoll date_label :interval '1s'
    'date "+%A, %B %d — %I:%M:%S %p"'
)
(defwidget date []
    (button
        :onclick 'sh -c \'vdirsyncer sync; /home/reese/scripts/kitty-popup floating 80 24 -c "khal interactive; exit"\''
        (label :class 'label'
            :text '${date_label}'
        )
    )
)

(defpoll dunst_paused :interval '1s' 'dunstctl is-paused')
(defwidget dunst []
    (button
        :onclick 'dunstctl set-paused toggle'
        (label :class 'label'
            :text {dunst_paused == 'true' ? '' : ''}
        )
    )
)

(defwindow main
    :monitor 0
    :geometry (geometry
        :x '0%'
        :y '0%'
        :width '100%'
        :height '32px'
        :anchor 'top center')
    :stacking 'fg'
    :reserve (struts :distance '32px' :side 'top')
    :windowtype 'dock'
    :wm-ignore false
    :class 'bar'

    (centerbox :orientation 'h'
        (box :class 'section' :orientation 'h' :halign 'start' :space-evenly false
            (weather)
            (moon)
            (cpu)
            (ram)
            (temperature)
            (net_down)
            (net_up)
        )
        (i3)
        (box :class 'section' :orientation 'h' :halign 'end' :space-evenly false
            (tray)
            (kdeconnect)
            ; (vpn)
            (pywal)
            ; (backup)
            (update)
            ; (wifi)
            (battery)
            (date)
            (dunst)
        )
    )
)
