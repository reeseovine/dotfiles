#!/usr/bin/env bash

# CONFIGURATION
LOCATION=0
YOFFSET=0
XOFFSET=0
WIDTH=14
WIDTH_WIDE=24

# Color Settings of Icon shown in Polybar
CLASS_DISCONNECTED='empty'   # Device Disconnected
CLASS_NEWDEVICE=''           # New Device
CLASS_BATTERY_90='good'      # Battery >= 90
CLASS_BATTERY_80=''          # Battery >= 80
CLASS_BATTERY_70=''          # Battery >= 70
CLASS_BATTERY_60=''          # Battery >= 60
CLASS_BATTERY_50=''          # Battery >= 50
CLASS_BATTERY_40=''          # Battery >= 40
CLASS_BATTERY_30=''          # Battery >= 30
CLASS_BATTERY_20='warning'   # Battery >= 20
CLASS_BATTERY_LOW='critical' # Battery <  20

# Icons shown in Polybar
ICON_SMARTPHONE=''
ICON_TABLET=''
SEPERATOR=' '

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

show_devices (){
    IFS=$','
    devices=""
    for device in $(qdbus --literal org.kde.kdeconnect /modules/kdeconnect org.kde.kdeconnect.daemon.devices); do
        deviceid=$(echo "$device" | awk -F'["|"]' '{print $2}')
        devicename=$(qdbus org.kde.kdeconnect "/modules/kdeconnect/devices/$deviceid" org.kde.kdeconnect.device.name)
        devicetype=$(qdbus org.kde.kdeconnect "/modules/kdeconnect/devices/$deviceid" org.kde.kdeconnect.device.type)
        isreach="$(qdbus org.kde.kdeconnect "/modules/kdeconnect/devices/$deviceid" org.kde.kdeconnect.device.isReachable)"
        istrust="$(qdbus org.kde.kdeconnect "/modules/kdeconnect/devices/$deviceid" org.kde.kdeconnect.device.isTrusted)"
        icon=$(get_icon "$devicetype")
        if [ "$isreach" = "true" ] && [ "$istrust" = "true" ]
        then
            battery="$(qdbus org.kde.kdeconnect "/modules/kdeconnect/devices/$deviceid" org.kde.kdeconnect.device.battery.charge)"
            class=$(get_class "$battery")
            devices+="(button :onclick '$DIR/kdeconnect -n $devicename -i $deviceid -b $battery' (label :class 'label $class' :tooltip '$devicename: $battery%' $icon))"
        elif [ "$isreach" = "false" ] && [ "$istrust" = "true" ]
        then
            class=$(get_class -1)
            devices+="(label :class 'label $class' :tooltip '$devicename: disconnected' $icon)"
        else
            haspairing="$(qdbus org.kde.kdeconnect "/modules/kdeconnect/devices/$deviceid" org.kde.kdeconnect.device.hasPairingRequests)"
            if [ "$haspairing" = "true" ]
            then
                show_pmenu2 "$devicename" "$deviceid"
            fi
            class=$(get_class -2)
            devices+="(button :onclick '$DIR/kdeconnect -n $devicename -i $deviceid -p' (label :class 'label $class' :tooltip '$devicename requesting pairing' $icon))"

        fi
    done
    echo "(box :class 'kdeconnect' :space-evenly true :vexpand true $devices)"
}

show_menu () {
    menu="$(rofi -sep "|" -dmenu -i -p "$DEV_NAME" -location $LOCATION -yoffset $YOFFSET -xoffset $XOFFSET -width $WIDTH -hide-scrollbar -line-padding 4 -padding 20 -lines 5 -no-show-icons <<< "Battery: $DEV_BATTERY%|Ping|Find Device|Send File|Browse Files|Unpair")"
                case "$menu" in
                    *Ping) qdbus org.kde.kdeconnect "/modules/kdeconnect/devices/$DEV_ID/ping" org.kde.kdeconnect.device.ping.sendPing ;;
                    *'Find Device') qdbus org.kde.kdeconnect "/modules/kdeconnect/devices/$DEV_ID/findmyphone" org.kde.kdeconnect.device.findmyphone.ring ;;
                    *'Send File') qdbus org.kde.kdeconnect "/modules/kdeconnect/devices/$DEV_ID/share" org.kde.kdeconnect.device.share.shareUrl "file://$(zenity --file-selection)" ;;
                    *'Browse Files')
                        if "$(qdbus --literal org.kde.kdeconnect "/modules/kdeconnect/devices/$DEV_ID/sftp" org.kde.kdeconnect.device.sftp.isMounted)" == "false"; then
                            qdbus org.kde.kdeconnect "/modules/kdeconnect/devices/$DEV_ID/sftp" org.kde.kdeconnect.device.sftp.mount
                        fi
                        qdbus org.kde.kdeconnect "/modules/kdeconnect/devices/$DEV_ID/sftp" org.kde.kdeconnect.device.sftp.startBrowsing
                        ;;
                    *'Unpair' ) qdbus org.kde.kdeconnect "/modules/kdeconnect/devices/$DEV_ID" org.kde.kdeconnect.device.unpair
                esac
}

show_pmenu () {
    menu="$(rofi -sep "|" -dmenu -i -p "$DEV_NAME" -location $LOCATION -yoffset $YOFFSET -xoffset $XOFFSET -width $WIDTH -hide-scrollbar -line-padding 1 -padding 20 -lines 1 -no-show-icons <<<"Pair Device")"
                case "$menu" in
                    *'Pair Device') qdbus org.kde.kdeconnect "/modules/kdeconnect/devices/$DEV_ID" org.kde.kdeconnect.device.requestPair
                esac
}

show_pmenu2 () {
    menu="$(rofi -sep "|" -dmenu -i -p "$1 has sent a pairing request" -location $LOCATION -yoffset $YOFFSET -xoffset $XOFFSET -width $WIDTH_WIDE -hide-scrollbar -line-padding 4 -padding 20 -lines 2 -no-show-icons <<< "Accept|Reject")"
                case "$menu" in
                    *'Accept') qdbus org.kde.kdeconnect "/modules/kdeconnect/devices/$2" org.kde.kdeconnect.device.acceptPairing ;;
                    *) qdbus org.kde.kdeconnect "/modules/kdeconnect/devices/$2" org.kde.kdeconnect.device.rejectPairing
                esac

}
get_icon () {
    if [ "$1" = "tablet" ]
    then
        icon=$ICON_TABLET
    else
        icon=$ICON_SMARTPHONE
    fi
    echo $icon
}

get_class () {
    case $1 in
	    "-1")   class=$CLASS_DISCONNECTED ;;
	    "-2")   class=$CLASS_NEWDEVICE ;;
	    2*)     class=$CLASS_BATTERY_20 ;;
	    3*)     class=$CLASS_BATTERY_30 ;;
	    4*)     class=$CLASS_BATTERY_40 ;;
	    5*)     class=$CLASS_BATTERY_50 ;;
	    6*)     class=$CLASS_BATTERY_60 ;;
	    7*)     class=$CLASS_BATTERY_70 ;;
	    8*)     class=$CLASS_BATTERY_80 ;;
	    9*|100) class=$CLASS_BATTERY_90 ;;
	    *)      class=$CLASS_BATTERY_LOW ;;
    esac
    echo $class
}

unset DEV_ID DEV_NAME DEV_BATTERY
while getopts 'di:n:b:mp' c
do
    # shellcheck disable=SC2220
    case $c in
        d) show_devices ;;
        i) DEV_ID=$OPTARG ;;
        n) DEV_NAME=$OPTARG ;;
        b) DEV_BATTERY=$OPTARG ;;
        m) show_menu  ;;
        p) show_pmenu ;;
    esac
done
