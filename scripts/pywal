#!/usr/bin/env bash

print_usage () {
	echo "Usage: $0 [-l] [-a] [path]"
	echo "-h, --help  Show this help message"
	echo "-l          Light mode flag"
	echo "-a          Automatic based on position of sun (requires redshift)"
	echo "path        File or directory to use for wallpaper"
	exit
}

light_mode=1
img_path=''

while(($#)); do
	case "$1" in
		-h | --help)
			print_usage;;
		-l)
			light_mode=0
			shift
			;;
		-a)
			light_mode=$([[ $(redshift -p | grep Period | sed -Ee 's/Period:\s(.*)$/\1/') == "Daytime" ]] ; echo $?)
			shift
			;;
		*)
			img_path=$1
			shift
			;;
	esac
done

if [ ! $img_path ]; then
	# find screen's aspect ratio and determine if it's ultrawide or not
	ultrawide='normal'
	read -r display_width display_height <<< `xrandr -q | head -n1 | sed -Ee 's/.*current ([0-9]+) x ([0-9]+).*/\1 \2/'`
	aspect_ratio=$(($display_width / $display_height))
	if [ $aspect_ratio -ge 2 ]; then
		ultrawide='ultrawide'
	fi

	if [ 0 == $light_mode ]; then
		img_path="$HOME/Pictures/Wallpapers/$ultrawide/light/"
	else
		img_path="$HOME/Pictures/Wallpapers/$ultrawide/dark/"
	fi

	echo "img_path: $img_path"
fi

if [[ -d "$img_path" ]]; then
	img_path=$(find "$img_path" -type f ! -name "$(basename -- "$(cat $HOME/.cache/wal/wal)")" | shuf -n 1)
fi

# Set the color scheme and wallpaper
scheme="${HOME}/.config/wal/colorschemes/$([ 0 == $light_mode ] && echo "light" || echo "dark")/$(basename "$img_path").json"
if [ -a "$scheme" ]; then
	echo $img_path > $HOME/.cache/wal/wal
	wal -f "$img_path"
else
	wal -i "$img_path" --backend colorz $([ 0 == $light_mode ] && echo "-l")
	# swaybg -i "$img_path" -m fill &
fi

# put light mode state in file so other programs can check current state
echo $light_mode > $HOME/.cache/wal/light_mode
source $HOME/.cache/wal/colors.sh

# light/dark mode toggle for some applications
node $HOME/scripts/lightswitch $([ 0 == $light_mode ] && echo "-l") &

# (re)start dunst
pidof dunst && killall dunst
dunst -lb  "${background:-#ffffff}" \
      -lf  "${foreground:-#000000}" \
      -nb  "${background:-#fffffff}" \
      -nf  "${foreground:-#000000}" \
      -cb  "${color5:-#ff4d66}" \
      -cf  "#ffffff" &
disown

# rgb lights (keyboard, etc.)
python3 $HOME/scripts/rgbctl &

# update firefox theme
pywalfox update
pywalfox $([ 0 == $light_mode ] && echo "light" || echo "dark")

# compile discord theme
sassc $HOME/git/github.com/katacarbix/discord-stuff/themes/bliss/pywal.scss $HOME/git/github.com/katacarbix/discord-stuff/themes/bliss/pywal.css

# generate blurred/tinted background for i3lock so it doesn't have to do it on-the-fly
i3lock_bg="/tmp/i3lock_bg.png"
sic -i "$img_path" --blur 48 --output-format PNG -o $i3lock_bg && \
convert $i3lock_bg -fill "${background}" -colorize 20 $i3lock_bg

# wait for all child processes to end
wait
