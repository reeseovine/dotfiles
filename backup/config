#!/usr/bin/env bash

# EDIT THESE BEFORE RUNNING

### Variables for the backup script ###

# File/directory to back up (SOURCE)
source=

# Location of repository (DESTINATION)
## You need to initialize the repository before you can store backups on it.
## See: https://restic.readthedocs.io/en/stable/030_preparing_a_new_repo.html
## If using SFTP you will want to use public key authentication so that you don't have to type the password every time.
dest="rclone:mega:/restic_backup/sad-machine"

# Where the password for the repository (NOT the user) is stored
## After creating the file make sure to run `chmod 700` on it.
passfile=$HOME/.config/backup/password

# List of patterns to include in backups
# Make sure this file exists, then add anything you want to it (or leave it empty)
# If empty, backups will include everything not in the excludelist.
includelist=$HOME/.config/backup/includelist

# List of patterns to exclude from backups
# Make sure this file exists, then add anything you want to it (or leave it empty)
excludelist=$HOME/.config/backup/excludelist

# Extra arguments for the restic command
restic_opts="--limit-upload=2000"

# Bash function to run BEFORE backing up
pre_backup () {
	echo $1
}

# Bash function to run AFTER backing up
## Backup exit code is passed as argument $1
post_backup () {
	echo $1
}


### Variables for the menu script ###

# Path to the main backup script. This is so it knows what to run.
backup_script=$HOME/scripts/backup

# dmenu-like program (rofi in this case)
dmenu_prompt="rofi -dmenu -p backupctl -lines 2"

# Terminal command for showing the log
terminal_command="kitty bash -c"


# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# You probably don't need to change these.

## Location of log file
logfile=$HOME/.log/backup.log

## Location of PID (process ID) file
pidfile=/tmp/backup.pid
